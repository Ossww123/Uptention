plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.otoki'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// Querydsl 설정 추가
def querydslDir = "$buildDir/generated/querydsl"

dependencies {
    // spring data jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Querydsl 의존성 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // @Valid, 입력 파라미터 검증을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // Spring Cloud AWS 의존성 (S3 통합)
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.3.0'

    // Spring MVC, Tomcat, Jackson 을 포함한 웹 개발 스타터 패키지
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Swagger 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

    // lombok 관련
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // h2
    runtimeOnly 'com.h2database:h2:2.2.224'

    // RabbitMQ
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    // Solana 라이브러리 추가
    implementation 'com.mmorrell:solanaj:1.19.2'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Querydsl Q 클래스 생성 경로 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// java source set에 querydsl Q 클래스 추가
sourceSets {
    main.java.srcDirs += [querydslDir]
}

// Querydsl Q 클래스 생성 디렉토리를 clean 작업 시 제거
clean {
    delete file(querydslDir)
}

tasks.named('test') {
    useJUnitPlatform()
}
